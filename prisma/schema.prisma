// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  passwordHash  String?
  role          Role      @default(USER)
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  listings           Listing[]
  verificationTokens VerificationToken[] // <— back relation added
}

model VerificationToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expires   DateTime
  createdAt DateTime @default(now())

  // Relation
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Listing {
  id          String   @id @default(cuid())
  title       String
  city        String
  price       Int // monthly price in cents (e.g., 150000 = $1500.00)
  beds        Int
  baths       Int
  status      Status   @default(APPROVED)
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  landlordId String?
  landlord   User?   @relation(fields: [landlordId], references: [id])

  // ✅ Media (SQLite‑compatible)
  images   Json? // store string[] as JSON (e.g. ["https://...","https://..."])
  videoUrl String? // optional video URL
}

enum Status {
  DRAFT
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  USER
  LANDLORD
  ADMIN
}
